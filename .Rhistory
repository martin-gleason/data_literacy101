"Tallest" = max(height),
"Standard Deviation, in Inches" = sd(height))
total_height <- height %>%
ggplot(aes(x = height)) +
geom_density(fill = "#a5d3c1") +
labs(x = "Height in Inches", y = "Probability Distribution")+
theme(axis.text = element_text(family = "Nobile", size = 18 ),
axis.title = element_text(family = "Nobile", size = 17 ))
bad_proof <- total_height +
geom_area(data = subset(df_height_den, x >= height_quants$q5 & x <= height_quants$q95),
aes(x = x, y = y), fill = "#9b9292") +
geom_vline(aes(xintercept = height_quants$median, color = "Median"), size = 1.5) +
geom_vline(aes(xintercept = mean(height), color = "Mean"), size = 1.5) +
scale_color_manual(name = "Descriptive Statistics", values = c(Median = "red", Mean = "#eebf48")) +
theme(axis.text = element_text(family = "Nobile", size = 18 ),
axis.title = element_text(family = "Nobile", size = 17 ))
total_height_bar <- height %>% group_by(sex) %>%
ggplot(aes(x = height)) + geom_bar(stat = "count", fill = "#a5d3c1", col = "black") +
labs(x = "Height in Inches", y = "Total at that Height")+
theme(axis.text = element_text(family = "Nobile", size = 18 ),
axis.title = element_text(family = "Nobile", size = 17 ))
total_height_chart <- height %>% group_by(sex) %>%
summarize("Average Height" = mean(height),
"Median Height" = median(height),
"Shortest" = min(height),
"Tallest" = max(height),
"Count" = n(),
"Standard Deviation" = sd(height))
total_height_sex_histogram <- height %>%
group_by(sex) %>%
ggplot(aes(x = height, fill = sex)) + geom_histogram( aes(y = ..density..), col = "black", position = "dodge")+
labs(x = "Height in Inches", y = "Total at that Height", caption = paste("Data from: " , cite), fill = "Sex")+
theme(axis.text = element_text(family = "Nobile", size = 18 ),
axis.title = element_text(family = "Nobile", size = 17 ))
height_men <- height %>% filter(sex == "M")
height_women <- height %>% filter(sex == "F")
height_men_hist <- height_men %>%
ggplot(aes(x = height)) + geom_histogram(aes(y = ..density..), fill = "blue", col = "black") +
labs(x = "Height in Inches", y = "Total at that Height", caption = paste("Data from: " , cite))+
theme(axis.text = element_text(family = "Nobile", size = 18 ),
axis.title = element_text(family = "Nobile", size = 17 ))
height_men_hist + stat_function(fun = dnorm,
args = list(mean = mean(height_men$height), sd(height_men$height)),
col = "blue",
lwd = 1)
height_women_hist <- height_women %>%
ggplot(aes(x = height, fill = sex)) + geom_histogram(aes(y = ..density..), fill = "#990000", col = "black") +
labs(x = "Height in Inches", y = "Total at that Height", caption = paste("Data from: " , cite))+
theme(axis.text = element_text(family = "Nobile", size = 18 ),
axis.title = element_text(family = "Nobile", size = 17 ))
height_women_hist + stat_function(fun = dnorm,
args = list(mean = mean(height_women$height), sd(height_women$height)),
col = "black",
lwd = 1) +
labs(y = "Probability Distribution")
prob_57 <- pnorm(57, mean = mean(height_women$height), sd = sd(height_women$height))
prob_164 <- pnorm(164, mean = mean(height_women$height), sd = sd(height_women$height))
height_cm <- read_csv(file_location)
height_cm
height <- height_cm %>% select(height, sex)
height
height <- height[1] * 2.54
height
library("tidyverse")
#all heights in inches
cite <- "https://vincentarelbundock.github.io/Rdatasets/doc/carData/Davis.html"
#height <- read_csv("/Users/martin.gleason/Dropbox (Personal)/Coding Projects/DataSets/height_weight.csv") #windows version
file_location <- "/Users/marty/Dropbox (Personal)/Coding Projects/DataSets/height_weight.csv"
height_cm <- read_csv(file_location)
height <- height_cm %>% select(height, sex)
height[1] <- height[1] * 2.54
height_quants <- height %>% summarise(q5 = quantile(height, .05),
q95 = quantile(height, .95),
avg = mean(height),
median = median(height))
x.dens <- density(height$height)
df_height_den <- data.frame(x = x.dens$x, y = x.dens$y)
bad_height <- height %>% summarize("Average Height" = mean(height),
"Median Height" = median(height),
"Shortest" = min(height),
"Tallest" = max(height),
"Standard Deviation, in Inches" = sd(height))
total_height <- height %>%
ggplot(aes(x = height)) +
geom_density(fill = "#a5d3c1") +
labs(x = "Height in Inches", y = "Probability Distribution")+
theme(axis.text = element_text(family = "Nobile", size = 18 ),
axis.title = element_text(family = "Nobile", size = 17 ))
bad_proof <- total_height +
geom_area(data = subset(df_height_den, x >= height_quants$q5 & x <= height_quants$q95),
aes(x = x, y = y), fill = "#9b9292") +
geom_vline(aes(xintercept = height_quants$median, color = "Median"), size = 1.5) +
geom_vline(aes(xintercept = mean(height), color = "Mean"), size = 1.5) +
scale_color_manual(name = "Descriptive Statistics", values = c(Median = "red", Mean = "#eebf48")) +
theme(axis.text = element_text(family = "Nobile", size = 18 ),
axis.title = element_text(family = "Nobile", size = 17 ))
total_height_bar <- height %>% group_by(sex) %>%
ggplot(aes(x = height)) + geom_bar(stat = "count", fill = "#a5d3c1", col = "black") +
labs(x = "Height in Inches", y = "Total at that Height")+
theme(axis.text = element_text(family = "Nobile", size = 18 ),
axis.title = element_text(family = "Nobile", size = 17 ))
total_height_chart <- height %>% group_by(sex) %>%
summarize("Average Height" = mean(height),
"Median Height" = median(height),
"Shortest" = min(height),
"Tallest" = max(height),
"Count" = n(),
"Standard Deviation" = sd(height))
total_height_sex_histogram <- height %>%
group_by(sex) %>%
ggplot(aes(x = height, fill = sex)) + geom_histogram( aes(y = ..density..), col = "black", position = "dodge")+
labs(x = "Height in Inches", y = "Total at that Height", caption = paste("Data from: " , cite), fill = "Sex")+
theme(axis.text = element_text(family = "Nobile", size = 18 ),
axis.title = element_text(family = "Nobile", size = 17 ))
height_men <- height %>% filter(sex == "M")
height_women <- height %>% filter(sex == "F")
height_men_hist <- height_men %>%
ggplot(aes(x = height)) + geom_histogram(aes(y = ..density..), fill = "blue", col = "black") +
labs(x = "Height in Inches", y = "Total at that Height", caption = paste("Data from: " , cite))+
theme(axis.text = element_text(family = "Nobile", size = 18 ),
axis.title = element_text(family = "Nobile", size = 17 ))
height_men_hist + stat_function(fun = dnorm,
args = list(mean = mean(height_men$height), sd(height_men$height)),
col = "blue",
lwd = 1)
height_women_hist <- height_women %>%
ggplot(aes(x = height, fill = sex)) + geom_histogram(aes(y = ..density..), fill = "#990000", col = "black") +
labs(x = "Height in Inches", y = "Total at that Height", caption = paste("Data from: " , cite))+
theme(axis.text = element_text(family = "Nobile", size = 18 ),
axis.title = element_text(family = "Nobile", size = 17 ))
height_women_hist + stat_function(fun = dnorm,
args = list(mean = mean(height_women$height), sd(height_women$height)),
col = "black",
lwd = 1) +
labs(y = "Probability Distribution")
prob_57 <- pnorm(57, mean = mean(height_women$height), sd = sd(height_women$height))
prob_164 <- pnorm(164, mean = mean(height_women$height), sd = sd(height_women$height))
source("normal_height.R")
library("sysfonts")
source("normal_height.R")
install.packages(c("dbplyr", "Rcpp", "yaml"))
install.packages(c("dbplyr", "Rcpp", "yaml"))
install.packages(c("dbplyr", "Rcpp", "yaml"))
library("sysfonts")
install.packages("sysfonts")
install.packages("sysfonts")
library("showtext")
update.packages(checkBuilt = TRUE)
xaringan:::inf_mr()
words_tidy %>%
count(word) %>%
with(wordcloud(word, n, min.freq = 1,
max.words = 25, colors = pro_colors_scheme,
family = "Nobile",
scale = c(4, 1)),
fill = "transparent",
height = 960, width =960, units = "px")
?knit
xaringan:::inf_mr()
words_tidy %>%
count(word) %>%
with(wordcloud2(word, n, mn.freq = 1,
max.words = 25, colors = pro_colors_scheme,
family = "Nobile",
scale = c(4, 1)),
fill = "transparent")
xaringan:::inf_mr()
words_tidy %>%
count(word)
words_tidy %>%
count(word) %>%
with(wordcloud2(word, n,
color = pro_colors_scheme,
fontFamily = "Nobile",
backgroundColor = "transparent"))
xaringan:::inf_mr()
words_tidy %>%
count(word) %>%
wordcloud2(word,
color = pro_colors_scheme,
fontFamily = "Nobile",
backgroundColor = "transparent"
words_tidy %>%
words_tidy %>%
count(word) %>%
wordcloud2(word,
color = pro_colors_scheme,
fontFamily = "Nobile",
backgroundColor = "Transparent")
words_tidy %>%
count(word) %>%
wordcloud2(word,
color = pro_colors_scheme,
fontFamily = "Nobile",
backgroundColor = "Transparent")
words_tidy %>%
count(word) %>%
wordcloud2(word)
words_tidy %>%
count(word) %>%
wordcloud2(word)
words_tidy %>%
count(word) %>%
wordcloud2(word)
words_tidy %>%
count(word) %>%
wordcloud2()
words_tidy %>%
count(word) %>%
wordcloud2(color = pro_colors_scheme,
fontFamily = "Nobile",
backgroundColor = "Transparent")
words_tidy %>%
count(word) %>%
wordcloud2(color = pro_colors_scheme,
fontFamily = "Nobile",
backgroundColor = "Transparent")
pro_colors_scheme
pro_colors_scheme[2]
pro_colors_scheme
View(pro_colors_scheme)
View(pro_colors_scheme2)
words_tidy %>%
count(word) %>%
wordcloud2(color = pro_colors_scheme2,
fontFamily = "Nobile",
backgroundColor = "Transparent")
words_tidy %>%
count(word) %>%
wordcloud2(color = pro_colors_scheme2,
fontFamily = "Nobile",
backgroundColor = "Transparent",
shape = "cardiod")
words_tidy %>%
count(word) %>%
wordcloud2(color = pro_colors_scheme2,
fontFamily = "Nobile",
backgroundColor = "Transparent",
shape = "cardioid")
words_tidy %>%
count(word) %>%
wordcloud2(color = pro_colors_scheme2,
fontFamily = "Nobile",
backgroundColor = "Transparent",
shape = "cardioid")
words_tidy %>%
count(word) %>%
wordcloud2(color = pro_colors_scheme2,
fontFamily = "Nobile",
backgroundColor = "Transparent",
shape = "triangle")
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
png(color = "transparent", height = 1200, width =1200)
?png
with(png(color = "transparent", height = 1200, width =1200))
with(png("registrationcloud", color = "transparent", height = 1200, width =1200))
with(png("registrationcloud.png", color = "transparent", height = 1200, width =1200))
words_tidy %>%
count(word) %>%
with(wordcloud(word, n, min.freq = 1,
max.words = 25, colors = pro_colors_scheme,
family = "Nobile",
scale = c(4, 1)),
fill = "transparent",
height = 1200, width =1200)
words_tidy %>%
count(word) %>%
with(wordcloud(word, n, min.freq = 1,
max.words = 25, colors = pro_colors_scheme,
family = "Nobile",
scale = c(4, 1)),
fill = "transparent")
png(height = 1200, width =1200)
par(mar = rep(0, 4))
words_tidy %>%
count(word) %>%
with(wordcloud(word, n, min.freq = 1,
max.words = 25, colors = pro_colors_scheme,
family = "Nobile",
scale = c(4, 1)),
fill = "transparent")
#png(height = 1200, width =1200)
par(mar = rep(0, 4))
?png
?par
?plot
words_tidy %>%
count(word) %>%
with(wordcloud(word, n, min.freq = 1,
max.words = 25, colors = pro_colors_scheme,
family = "Nobile",
scale = c(4, 1)),
fill = "transparent")
png("registration_cloud", height = 960, width = 960, bg = "transparent")
words_tidy %>%
count(word) %>%
with(wordcloud(word, n, min.freq = 1,
max.words = 25, colors = pro_colors_scheme,
family = "Nobile",
scale = c(4, 1)),
fill = "transparent")
dev.off()
source("wordcloud.R")
words_tidy %>%
count(word) %>%
wordcloud2(color = pro_colors_scheme2,
size = 1,
gridSize = 1,
fontFamily = "Nobile",
backgroundColor = "Transparent",
shape = "triangle")
#out.extra='style="display:block;"'
View(words_tidy)
library(tidyverse)
library(lubridate)
library(kableExtra)
library(viridis)
library(plotly)
library(xaringan)
library("sysfonts")
library("showtext")
source("normal_height.R")
# figure out how to make sure it works on windows or mac
# need to fix formating data  ssh-add ~/.ssh/id_rsa
# need to fix gitv
source("wordcloud.R")
words_tidy %>%
count(word) %>%
with(wordcloud(word, n, min.freq = 1,
max.words = 25, colors = pro_colors_scheme,
family = "Nobile",
scale = c(4, 1)),
fill = "transparent")
par(mar = rep(0, 4))
#out.extra='style="display:block;"'
total_height_sex_histogram +
theme(panel.spacing = unit(5, "lines"))+
facet_grid(~ Sex)+
theme(axis.text = element_text(family = "Nobile", size = 20 ),
axis.title = element_text(family = "Nobile", size = 20 ),
legend.text = element_text(family = "Nobile", size = 20),
legend.title = element_text(family = "Nobile", size = 20))
total_height_chart %>% kable(caption = "All Measurements in cm") %>%
kable_styling("striped", "bordered", full_width = FALSE)
xaringan:::inf_mr()
library(tidyverse)
library(lubridate)
library(kableExtra)
library(viridis)
library(plotly)
library(xaringan)
library("sysfonts")
library("showtext")
source("normal_height.R")
# figure out how to make sure it works on windows or mac
# need to fix formating data  ssh-add ~/.ssh/id_rsa
# need to fix gitv
library(tidyverse)
library(lubridate)
library(kableExtra)
library(viridis)
library(plotly)
library(xaringan)
library("sysfonts")
library("showtext")
source("normal_height.R")
# figure out how to make sure it works on windows or mac
# need to fix formating data  ssh-add ~/.ssh/id_rsa
# need to fix gitv
source("wordcloud.R")
words_tidy %>%
count(word) %>%
with(wordcloud(word, n, min.freq = 1,
max.words = 25, colors = pro_colors_scheme,
family = "Nobile",
scale = c(4, 1)),
fill = "transparent")
par(mar = rep(0, 4))
#out.extra='style="display:block;"'
total_height_sex_histogram +
theme(panel.spacing = unit(5, "lines"))+
facet_grid(~ Sex)+
theme(axis.text = element_text(family = "Nobile", size = 20 ),
axis.title = element_text(family = "Nobile", size = 20 ),
legend.text = element_text(family = "Nobile", size = 20),
legend.title = element_text(family = "Nobile", size = 20))
total_height_chart %>% kable(caption = "All Measurements in cm") %>%
kable_styling("striped", "bordered", full_width = FALSE)
xaringan:::inf_mr()
xaringan:::inf_mr()
total_height_sex_histogram +
theme(panel.spacing = unit(5, "lines"))+
facet_grid(~ Sex)+
theme(axis.text = element_text(family = "Nobile", size = 20 ),
axis.title = element_text(family = "Nobile", size = 20 ),
legend.text = element_text(family = "Nobile", size = 20),
legend.title = element_text(family = "Nobile", size = 20))
library(tidyverse)
library(lubridate)
library(kableExtra)
library(viridis)
library(plotly)
library(xaringan)
library("sysfonts")
library("showtext")
source("normal_height.R")
# figure out how to make sure it works on windows or mac
# need to fix formating data  ssh-add ~/.ssh/id_rsa
# need to fix gitv
source("wordcloud.R")
words_tidy %>%
count(word) %>%
with(wordcloud(word, n, min.freq = 1,
max.words = 25, colors = pro_colors_scheme,
family = "Nobile",
scale = c(4, 1)),
fill = "transparent")
par(mar = rep(0, 4))
#out.extra='style="display:block;"'
total_height_sex_histogram +
theme(panel.spacing = unit(5, "lines"))+
facet_grid(~ Sex)+
theme(axis.text = element_text(family = "Nobile", size = 20 ),
axis.title = element_text(family = "Nobile", size = 20 ),
legend.text = element_text(family = "Nobile", size = 20),
legend.title = element_text(family = "Nobile", size = 20))
total_height_chart %>% kable(caption = "All Measurements in Inches") %>%
kable_styling("striped", "bordered", full_width = FALSE)
total_height_sex_histogram +
theme(panel.spacing = unit(5, "lines"))+
facet_grid(~ Sex)+
theme(axis.text = element_text(family = "Nobile", size = 20 ),
axis.title = element_text(family = "Nobile", size = 20 ),
legend.text = element_text(family = "Nobile", size = 20),
legend.title = element_text(family = "Nobile", size = 20))
total_height_chart %>% kable(caption = "All Measurements in Inches") %>%
kable_styling("striped", "bordered", full_width = FALSE)
xaringan:::inf_mr()
install.packages("openssl")
?file.path
??read_excel
??read_xlsx
?read.delim
?read_delim
??read_delim
?read.csv
source("wordcloud.R")
iris
glimpse(iris)
iris %>% ggplot(aes(x = Sepal.Length, y = Sepal.Width, fill = Species)) + geom_bar()
iris %>% ggplot(aes(x = Sepal.Length, y = Sepal.Width, fill = Species)) + geom_bar(stat=identity)
iris %>% ggplot(aes(x = Sepal.Length, y = Sepal.Width, fill = Species)) + geom_bar(stat="identity")
(iris %>% ggplot(aes(x = Sepal.Length, y = Sepal.Width, fill = Species)) + geom_bar(stat="identity"))
xaringan:::inf_mr()
total_height_sex_histogram +
theme(panel.spacing = unit(5, "lines"))+
facet_grid(~ Sex)+
theme(axis.text = element_text(family = "Nobile", size = 20 ),
axis.title = element_text(family = "Nobile", size = 20 ),
legend.text = element_text(family = "Nobile", size = 20),
legend.title = element_text(family = "Nobile", size = 20))
total_height_sex_histogram +
theme(panel.spacing = unit(5, "lines"))+
facet_grid(~ Sex)+
theme(axis.text = element_text(family = "Nobile", size = 20 ),
axis.title = element_text(family = "Nobile", size = 20 ),
legend.text = element_text(family = "Nobile", size = 20),
legend.title = element_text(family = "Nobile", size = 20))
total_height_sex_histogram +
theme(panel.spacing = unit(5, "lines"))+
facet_grid(~ Sex)+
theme(axis.text = element_text(family = "Nobile", size = 20 ),
axis.title = element_text(family = "Nobile", size = 20 ),
legend.text = element_text(family = "Nobile", size = 20),
legend.title = element_text(family = "Nobile", size = 20))
wc2 <- words_tidy %>%
count(word) %>%
arrange(desc(n)) %>%
wordcloud2(fontFamily = "Nobile",
color = pro_colors_scheme2,
backgroundColor = "transparent",
size = 1)
## Court data/statistics wordcloud
library("tidyverse")
library("googlesheets")
library("wordcloud")
library("wordcloud2")
library("RColorBrewer")
library("sysfonts")
library("tidytext")
library("showtext")
font_add_google(name = "Nobile")
source("../scripts/color_scheme.R")
responses <- gs_url("https://docs.google.com/spreadsheets/d/1oqOAeku8K8JGb31U8HGHu6PsAaxGWdtFxZFLUKtDlpE/edit#gid=1115118292")
sheet <- gs_read(responses)
email <- sheet$`Email Address`
length(unique(email))
words_untidy <- sheet[7]
names(words_untidy) <- "text"
words_tidy <- words_untidy %>%
unnest_tokens(word, text) %>%
anti_join(get_stopwords())
wc2 <- words_tidy %>%
count(word) %>%
arrange(desc(n)) %>%
wordcloud2(fontFamily = "Nobile",
color = pro_colors_scheme2,
backgroundColor = "transparent",
size = 1)
email

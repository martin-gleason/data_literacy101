count(word) %>%
wordcloud2(word)
words_tidy %>%
count(word) %>%
wordcloud2()
words_tidy %>%
count(word) %>%
wordcloud2(color = pro_colors_scheme,
fontFamily = "Nobile",
backgroundColor = "Transparent")
words_tidy %>%
count(word) %>%
wordcloud2(color = pro_colors_scheme,
fontFamily = "Nobile",
backgroundColor = "Transparent")
pro_colors_scheme
pro_colors_scheme[2]
pro_colors_scheme
View(pro_colors_scheme)
View(pro_colors_scheme2)
words_tidy %>%
count(word) %>%
wordcloud2(color = pro_colors_scheme2,
fontFamily = "Nobile",
backgroundColor = "Transparent")
words_tidy %>%
count(word) %>%
wordcloud2(color = pro_colors_scheme2,
fontFamily = "Nobile",
backgroundColor = "Transparent",
shape = "cardiod")
words_tidy %>%
count(word) %>%
wordcloud2(color = pro_colors_scheme2,
fontFamily = "Nobile",
backgroundColor = "Transparent",
shape = "cardioid")
words_tidy %>%
count(word) %>%
wordcloud2(color = pro_colors_scheme2,
fontFamily = "Nobile",
backgroundColor = "Transparent",
shape = "cardioid")
words_tidy %>%
count(word) %>%
wordcloud2(color = pro_colors_scheme2,
fontFamily = "Nobile",
backgroundColor = "Transparent",
shape = "triangle")
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
png(color = "transparent", height = 1200, width =1200)
?png
with(png(color = "transparent", height = 1200, width =1200))
with(png("registrationcloud", color = "transparent", height = 1200, width =1200))
with(png("registrationcloud.png", color = "transparent", height = 1200, width =1200))
words_tidy %>%
count(word) %>%
with(wordcloud(word, n, min.freq = 1,
max.words = 25, colors = pro_colors_scheme,
family = "Nobile",
scale = c(4, 1)),
fill = "transparent",
height = 1200, width =1200)
words_tidy %>%
count(word) %>%
with(wordcloud(word, n, min.freq = 1,
max.words = 25, colors = pro_colors_scheme,
family = "Nobile",
scale = c(4, 1)),
fill = "transparent")
png(height = 1200, width =1200)
par(mar = rep(0, 4))
words_tidy %>%
count(word) %>%
with(wordcloud(word, n, min.freq = 1,
max.words = 25, colors = pro_colors_scheme,
family = "Nobile",
scale = c(4, 1)),
fill = "transparent")
#png(height = 1200, width =1200)
par(mar = rep(0, 4))
?png
?par
?plot
words_tidy %>%
count(word) %>%
with(wordcloud(word, n, min.freq = 1,
max.words = 25, colors = pro_colors_scheme,
family = "Nobile",
scale = c(4, 1)),
fill = "transparent")
png("registration_cloud", height = 960, width = 960, bg = "transparent")
words_tidy %>%
count(word) %>%
with(wordcloud(word, n, min.freq = 1,
max.words = 25, colors = pro_colors_scheme,
family = "Nobile",
scale = c(4, 1)),
fill = "transparent")
dev.off()
source("wordcloud.R")
words_tidy %>%
count(word) %>%
wordcloud2(color = pro_colors_scheme2,
size = 1,
gridSize = 1,
fontFamily = "Nobile",
backgroundColor = "Transparent",
shape = "triangle")
#out.extra='style="display:block;"'
View(words_tidy)
library(tidyverse)
library(lubridate)
library(kableExtra)
library(viridis)
library(plotly)
library(xaringan)
library("sysfonts")
library("showtext")
source("normal_height.R")
# figure out how to make sure it works on windows or mac
# need to fix formating data  ssh-add ~/.ssh/id_rsa
# need to fix gitv
source("wordcloud.R")
words_tidy %>%
count(word) %>%
with(wordcloud(word, n, min.freq = 1,
max.words = 25, colors = pro_colors_scheme,
family = "Nobile",
scale = c(4, 1)),
fill = "transparent")
par(mar = rep(0, 4))
#out.extra='style="display:block;"'
total_height_sex_histogram +
theme(panel.spacing = unit(5, "lines"))+
facet_grid(~ Sex)+
theme(axis.text = element_text(family = "Nobile", size = 20 ),
axis.title = element_text(family = "Nobile", size = 20 ),
legend.text = element_text(family = "Nobile", size = 20),
legend.title = element_text(family = "Nobile", size = 20))
total_height_chart %>% kable(caption = "All Measurements in cm") %>%
kable_styling("striped", "bordered", full_width = FALSE)
xaringan:::inf_mr()
library(tidyverse)
library(lubridate)
library(kableExtra)
library(viridis)
library(plotly)
library(xaringan)
library("sysfonts")
library("showtext")
source("normal_height.R")
# figure out how to make sure it works on windows or mac
# need to fix formating data  ssh-add ~/.ssh/id_rsa
# need to fix gitv
library(tidyverse)
library(lubridate)
library(kableExtra)
library(viridis)
library(plotly)
library(xaringan)
library("sysfonts")
library("showtext")
source("normal_height.R")
# figure out how to make sure it works on windows or mac
# need to fix formating data  ssh-add ~/.ssh/id_rsa
# need to fix gitv
source("wordcloud.R")
words_tidy %>%
count(word) %>%
with(wordcloud(word, n, min.freq = 1,
max.words = 25, colors = pro_colors_scheme,
family = "Nobile",
scale = c(4, 1)),
fill = "transparent")
par(mar = rep(0, 4))
#out.extra='style="display:block;"'
total_height_sex_histogram +
theme(panel.spacing = unit(5, "lines"))+
facet_grid(~ Sex)+
theme(axis.text = element_text(family = "Nobile", size = 20 ),
axis.title = element_text(family = "Nobile", size = 20 ),
legend.text = element_text(family = "Nobile", size = 20),
legend.title = element_text(family = "Nobile", size = 20))
total_height_chart %>% kable(caption = "All Measurements in cm") %>%
kable_styling("striped", "bordered", full_width = FALSE)
xaringan:::inf_mr()
xaringan:::inf_mr()
total_height_sex_histogram +
theme(panel.spacing = unit(5, "lines"))+
facet_grid(~ Sex)+
theme(axis.text = element_text(family = "Nobile", size = 20 ),
axis.title = element_text(family = "Nobile", size = 20 ),
legend.text = element_text(family = "Nobile", size = 20),
legend.title = element_text(family = "Nobile", size = 20))
library(tidyverse)
library(lubridate)
library(kableExtra)
library(viridis)
library(plotly)
library(xaringan)
library("sysfonts")
library("showtext")
source("normal_height.R")
# figure out how to make sure it works on windows or mac
# need to fix formating data  ssh-add ~/.ssh/id_rsa
# need to fix gitv
source("wordcloud.R")
words_tidy %>%
count(word) %>%
with(wordcloud(word, n, min.freq = 1,
max.words = 25, colors = pro_colors_scheme,
family = "Nobile",
scale = c(4, 1)),
fill = "transparent")
par(mar = rep(0, 4))
#out.extra='style="display:block;"'
total_height_sex_histogram +
theme(panel.spacing = unit(5, "lines"))+
facet_grid(~ Sex)+
theme(axis.text = element_text(family = "Nobile", size = 20 ),
axis.title = element_text(family = "Nobile", size = 20 ),
legend.text = element_text(family = "Nobile", size = 20),
legend.title = element_text(family = "Nobile", size = 20))
total_height_chart %>% kable(caption = "All Measurements in Inches") %>%
kable_styling("striped", "bordered", full_width = FALSE)
total_height_sex_histogram +
theme(panel.spacing = unit(5, "lines"))+
facet_grid(~ Sex)+
theme(axis.text = element_text(family = "Nobile", size = 20 ),
axis.title = element_text(family = "Nobile", size = 20 ),
legend.text = element_text(family = "Nobile", size = 20),
legend.title = element_text(family = "Nobile", size = 20))
total_height_chart %>% kable(caption = "All Measurements in Inches") %>%
kable_styling("striped", "bordered", full_width = FALSE)
xaringan:::inf_mr()
install.packages("openssl")
?file.path
??read_excel
??read_xlsx
?read.delim
?read_delim
??read_delim
?read.csv
source("wordcloud.R")
iris
glimpse(iris)
iris %>% ggplot(aes(x = Sepal.Length, y = Sepal.Width, fill = Species)) + geom_bar()
iris %>% ggplot(aes(x = Sepal.Length, y = Sepal.Width, fill = Species)) + geom_bar(stat=identity)
iris %>% ggplot(aes(x = Sepal.Length, y = Sepal.Width, fill = Species)) + geom_bar(stat="identity")
(iris %>% ggplot(aes(x = Sepal.Length, y = Sepal.Width, fill = Species)) + geom_bar(stat="identity"))
xaringan:::inf_mr()
total_height_sex_histogram +
theme(panel.spacing = unit(5, "lines"))+
facet_grid(~ Sex)+
theme(axis.text = element_text(family = "Nobile", size = 20 ),
axis.title = element_text(family = "Nobile", size = 20 ),
legend.text = element_text(family = "Nobile", size = 20),
legend.title = element_text(family = "Nobile", size = 20))
total_height_sex_histogram +
theme(panel.spacing = unit(5, "lines"))+
facet_grid(~ Sex)+
theme(axis.text = element_text(family = "Nobile", size = 20 ),
axis.title = element_text(family = "Nobile", size = 20 ),
legend.text = element_text(family = "Nobile", size = 20),
legend.title = element_text(family = "Nobile", size = 20))
total_height_sex_histogram +
theme(panel.spacing = unit(5, "lines"))+
facet_grid(~ Sex)+
theme(axis.text = element_text(family = "Nobile", size = 20 ),
axis.title = element_text(family = "Nobile", size = 20 ),
legend.text = element_text(family = "Nobile", size = 20),
legend.title = element_text(family = "Nobile", size = 20))
wc2 <- words_tidy %>%
count(word) %>%
arrange(desc(n)) %>%
wordcloud2(fontFamily = "Nobile",
color = pro_colors_scheme2,
backgroundColor = "transparent",
size = 1)
## Court data/statistics wordcloud
library("tidyverse")
library("googlesheets")
library("wordcloud")
library("wordcloud2")
library("RColorBrewer")
library("sysfonts")
library("tidytext")
library("showtext")
font_add_google(name = "Nobile")
source("../scripts/color_scheme.R")
responses <- gs_url("https://docs.google.com/spreadsheets/d/1oqOAeku8K8JGb31U8HGHu6PsAaxGWdtFxZFLUKtDlpE/edit#gid=1115118292")
sheet <- gs_read(responses)
email <- sheet$`Email Address`
length(unique(email))
words_untidy <- sheet[7]
names(words_untidy) <- "text"
words_tidy <- words_untidy %>%
unnest_tokens(word, text) %>%
anti_join(get_stopwords())
wc2 <- words_tidy %>%
count(word) %>%
arrange(desc(n)) %>%
wordcloud2(fontFamily = "Nobile",
color = pro_colors_scheme2,
backgroundColor = "transparent",
size = 1)
email
require(tidyverse)
(iris %>% ggplot(aes(x = Sepal.Length, y = Sepal.Width, fill = Species)) + geom_bar(stat="identity"))
??numericInput
?fivenum
install.packages("RPostgres")
?postgres
?Rpostgreas
?Rpostgres
?RPostgres
>?RPostgres
?RPostgres
install.packages("RPostgreSQL")
length(unique(email))
library("googlesheets")
## Court data/statistics wordcloud
library("tidyverse")
library("googlesheets")
library("wordcloud")
library("wordcloud2")
library("RColorBrewer")
library("sysfonts")
library("tidytext")
library("showtext")
font_add_google(name = "Nobile")
source("../scripts/color_scheme.R")
responses <- gs_url("https://docs.google.com/spreadsheets/d/1oqOAeku8K8JGb31U8HGHu6PsAaxGWdtFxZFLUKtDlpE/edit#gid=1115118292")
sheet <- gs_read(responses)
email <- sheet$`Email Address`
length(unique(email))
words_untidy <- sheet[7]
names(words_untidy) <- "text"
words_tidy <- words_untidy %>%
unnest_tokens(word, text) %>%
anti_join(get_stopwords())
wc2 <- words_tidy %>%
count(word) %>%
arrange(desc(n)) %>%
wordcloud2(fontFamily = "Nobile",
color = pro_colors_scheme2,
backgroundColor = "transparent",
size = 1)
source('~/Dropbox (Personal)/Coding Projects/R/data_literacy101/wordcloud.R')
## Court data/statistics wordcloud
library("tidyverse")
library("googlesheets")
library("wordcloud")
library("wordcloud2")
library("RColorBrewer")
library("sysfonts")
library("tidytext")
library("showtext")
url <- "https://docs.google.com/spreadsheets/d/1HdAUfbLAusvCUX-hQXUJuckv1-VeUyDn3KqoK2YuK_E/edit#gid=1285998547"
font_add_google(name = "Nobile")
source("../scripts/color_scheme.R")
responses <- gs_url(url)
sheet <- gs_read(responses)
email <- sheet$`Email Address`
length(unique(email))
words_untidy <- sheet[7]
names(words_untidy) <- "text"
words_tidy <- words_untidy %>%
unnest_tokens(word, text) %>%
anti_join(get_stopwords())
wc2 <- words_tidy %>%
count(word) %>%
arrange(desc(n)) %>%
wordcloud2(fontFamily = "Nobile",
color = pro_colors_scheme2,
backgroundColor = "transparent",
size = 1)
wc2
client_scores %>%
ggplot(aes(x = as.factor(`Client ID`), y= Score)) + geom_point() +
labs(x = "Client ID", title = "Client Risk Score", y = "JRA Score")
client_scores %>%
ggplot(aes(x = as.factor(`Client ID`), y= Score)) + geom_point() +
labs(x = "Client ID", title = "Client Risk Score", y = "JRA Score")
source("mock_etl.R")
source("risk_factors_math.R")
library(kableExtra)
library(ggmosaic)
kable(demographics) %>%
kable_styling(bootstrap_options = c("striped", "bordered", "hover")) %>%
scroll_box(width = "75%", height = "75%")
demo_ZRG <- demographics %>% group_by(`Client Zipcode`, `Client Race`, `Client Gender`) %>%
summarize(Totals = n())
demo_ZRG %>% kable() %>%
kable_styling(bootstrap_options = c("striped", "bordered", "hover")) %>%
scroll_box(width = "75%", height = "75%")
demographics %>% ggplot(aes(x = as.factor(`Client Zipcode`), fill = `Client Race`)) +
geom_histogram(stat = "count", position = "dodge") +
facet_grid(~ `Client Gender`) +
labs(x = "Client Zipcode", y = "Total Per Zipcode", title = "JRA: Clients by Zipcode, Gender, and Race") +
coord_flip()
#theme(axis.text.x = element_text(angle = 90))
client_scores %>%
ggplot(aes(x = as.factor(`Client ID`), y= Score)) + geom_point() +
labs(x = "Client ID", title = "Client Risk Score", y = "JRA Score")
client_scores %>%
select(`Client ID`, `Assessment Date`, `Re-evaluation`, Score) %>%
left_join(demographics %>%
select(`Client ID`, `Client Race`, `Client Gender`, `Client Zipcode`)) %>%
kable() %>%
kable_styling(c("striped", "bordered", "hover", "responsive"))
demo_score <- client_scores %>%
select(`Client ID`, `Assessment Date`, `Re-evaluation`, Score) %>%
left_join(demographics %>%
select(`Client ID`, `Client Race`, `Client Gender`, `Client Zipcode`))
demo_score %>%
ggplot(aes(x = as.factor(`Client Zipcode`), y = Score, col = `Client Race`)) +
scale_x_discrete() +
geom_point() +
labs(x = "Client Zipcode", title = "Zipcode and Risk Score") +
theme(axis.text.x = element_text(angle = 90)) +
facet_grid(~ `Client Gender`)
demo_risk_factor <-demo_score %>%
mutate(`Risk Level` = sapply(Score, gender = `Client Gender`, return_risk))
demo_risk_factor %>%
ggplot(aes(x = as.factor(`Client Zipcode`), y = Score, col = `Risk Level`)) +
scale_x_discrete() +
geom_point()
demo_risk_factor %>%
kable() %>%
kable_styling(c("striped", "bordered", "hover"))
demo_risk_factor %>%
group_by(`Client Race`, Score, `Risk Level`) %>%
summarize(Total = n()) %>%
ggplot(aes(x = `Client Race`, y = Score, col = `Risk Level`)) +
labs(title = "Risk Level by Race and Score") +
geom_point()
demo_risk_factor %>%
group_by(`Client Race`, Score, `Risk Level`) %>%
summarize(Total = n()) %>%
ggplot(aes(x = `Client Race`, y = Score, col = `Risk Level`)) +
labs(title = "Risk Level by Race and Score") +
geom_freqpoly()
demo_risk_factor %>%
group_by(`Client Race`, Score, `Risk Level`) %>%
summarize(Total = n()) %>%
ggplot(aes(x = `Client Race`, y = Score, col = `Risk Level`)) +
labs(title = "Risk Level by Race and Score") +
geom_freqpoly()
demo_risk_factor %>%
group_by(`Client Race`, Score, `Risk Level`) %>%
summarize(Total = n()) %>%
ggplot(aes(x = `Client Race`, y = Score, col = `Risk Level`)) +
labs(title = "Risk Level by Race and Score") +
geom_freqpoly(stat = "identity")
demo_risk_factor %>%
group_by(`Client Race`, Score, `Risk Level`) %>%
summarize(Total = n()) %>%
ggplot(aes(x = `Client Race`, y = Score, col = `Risk Level`)) +
labs(title = "Risk Level by Race and Score") +
geom_hex()
demo_risk_factor %>%
group_by(`Client Race`, Score, `Risk Level`) %>%
summarize(Total = n()) %>%
ggplot(aes(x = `Client Race`, y = Score, col = `Risk Level`)) +
labs(title = "Risk Level by Race and Score") +
geom_line()
demo_risk_factor %>%
group_by(`Client Race`, Score, `Risk Level`) %>%
summarize(Total = n()) %>%
ggplot(aes(x = `Client Race`, y = Score, col = `Risk Level`)) +
labs(title = "Risk Level by Race and Score") +
geom_bar()
demo_risk_factor %>%
group_by(`Client Race`, Score, `Risk Level`) %>%
summarize(Total = n()) %>%
ggplot(aes(x = `Client Race`, y = Score, col = `Risk Level`)) +
labs(title = "Risk Level by Race and Score") +
geom_bar()
demo_risk_factor %>%
group_by(`Client Race`, Score, `Risk Level`) %>%
summarize(Total = n()) %>%
ggplot(aes(x = `Client Race`, y = Score, col = `Risk Level`)) +
labs(title = "Risk Level by Race and Score") +
geom_bar(stat = "identity")
demo_risk_factor %>%
group_by(`Client Race`, Score, `Risk Level`) %>%
summarize(Total = n()) %>%
ggplot(aes(x = `Client Race`, y = Score, fill = `Risk Level`)) +
labs(title = "Risk Level by Race and Score") +
geom_bar(stat = "identity")
demo_risk_factor %>%
group_by(`Client Race`, Score, `Risk Level`) %>%
summarize(Total = n()) %>%
ggplot(aes(x = `Client Race`, y = Score, fill = `Risk Level`)) +
labs(title = "Risk Level by Race and Score") +
geom_bar(stat = "identity") +
facet_grid( ~ SEX)
demo_risk_factor %>%
group_by(`Client Race`, Score, `Risk Level`) %>%
summarize(Total = n()) %>%
ggplot(aes(x = `Client Race`, y = Score, fill = `Risk Level`)) +
labs(title = "Risk Level by Race and Score") +
geom_bar(stat = "identity") +
facet_grid( ~ Gender)
View(client_scores)
install.packages(c("callr", "digest", "later", "leaflet", "R.utils", "rlang", "tinytex", "wordcloud", "xtable"))
install.packages(c("callr", "digest", "later", "leaflet", "R.utils", "rlang", "tinytex", "wordcloud", "xtable"))
install.packages("r2d3")

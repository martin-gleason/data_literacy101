theme(panel.spacing = unit(5, "lines"))+
facet_grid(~ Sex)+
theme(axis.text = element_text(family = "Nobile", size = 20 ),
axis.title = element_text(family = "Nobile", size = 20 ),
legend.text = element_text(family = "Nobile", size = 20),
legend.title = element_text(family = "Nobile", size = 20))
total_height_sex_histogram +
theme(panel.spacing = unit(5, "lines"))+
facet_grid(~ Sex)+
theme(axis.text = element_text(family = "Nobile", size = 20 ),
axis.title = element_text(family = "Nobile", size = 20 ),
legend.text = element_text(family = "Nobile", size = 20),
legend.title = element_text(family = "Nobile", size = 20))
total_height_sex_histogram +
theme(panel.spacing = unit(5, "lines"))+
facet_grid(~ Sex)+
theme(axis.text = element_text(family = "Nobile", size = 20 ),
axis.title = element_text(family = "Nobile", size = 20 ),
legend.text = element_text(family = "Nobile", size = 20),
legend.title = element_text(family = "Nobile", size = 20))
wc2 <- words_tidy %>%
count(word) %>%
arrange(desc(n)) %>%
wordcloud2(fontFamily = "Nobile",
color = pro_colors_scheme2,
backgroundColor = "transparent",
size = 1)
## Court data/statistics wordcloud
library("tidyverse")
library("googlesheets")
library("wordcloud")
library("wordcloud2")
library("RColorBrewer")
library("sysfonts")
library("tidytext")
library("showtext")
font_add_google(name = "Nobile")
source("../scripts/color_scheme.R")
responses <- gs_url("https://docs.google.com/spreadsheets/d/1oqOAeku8K8JGb31U8HGHu6PsAaxGWdtFxZFLUKtDlpE/edit#gid=1115118292")
sheet <- gs_read(responses)
email <- sheet$`Email Address`
length(unique(email))
words_untidy <- sheet[7]
names(words_untidy) <- "text"
words_tidy <- words_untidy %>%
unnest_tokens(word, text) %>%
anti_join(get_stopwords())
wc2 <- words_tidy %>%
count(word) %>%
arrange(desc(n)) %>%
wordcloud2(fontFamily = "Nobile",
color = pro_colors_scheme2,
backgroundColor = "transparent",
size = 1)
email
require(tidyverse)
(iris %>% ggplot(aes(x = Sepal.Length, y = Sepal.Width, fill = Species)) + geom_bar(stat="identity"))
??numericInput
?fivenum
install.packages("RPostgres")
?postgres
?Rpostgreas
?Rpostgres
?RPostgres
>?RPostgres
?RPostgres
install.packages("RPostgreSQL")
length(unique(email))
library("googlesheets")
## Court data/statistics wordcloud
library("tidyverse")
library("googlesheets")
library("wordcloud")
library("wordcloud2")
library("RColorBrewer")
library("sysfonts")
library("tidytext")
library("showtext")
font_add_google(name = "Nobile")
source("../scripts/color_scheme.R")
responses <- gs_url("https://docs.google.com/spreadsheets/d/1oqOAeku8K8JGb31U8HGHu6PsAaxGWdtFxZFLUKtDlpE/edit#gid=1115118292")
sheet <- gs_read(responses)
email <- sheet$`Email Address`
length(unique(email))
words_untidy <- sheet[7]
names(words_untidy) <- "text"
words_tidy <- words_untidy %>%
unnest_tokens(word, text) %>%
anti_join(get_stopwords())
wc2 <- words_tidy %>%
count(word) %>%
arrange(desc(n)) %>%
wordcloud2(fontFamily = "Nobile",
color = pro_colors_scheme2,
backgroundColor = "transparent",
size = 1)
source('~/Dropbox (Personal)/Coding Projects/R/data_literacy101/wordcloud.R')
## Court data/statistics wordcloud
library("tidyverse")
library("googlesheets")
library("wordcloud")
library("wordcloud2")
library("RColorBrewer")
library("sysfonts")
library("tidytext")
library("showtext")
url <- "https://docs.google.com/spreadsheets/d/1HdAUfbLAusvCUX-hQXUJuckv1-VeUyDn3KqoK2YuK_E/edit#gid=1285998547"
font_add_google(name = "Nobile")
source("../scripts/color_scheme.R")
responses <- gs_url(url)
sheet <- gs_read(responses)
email <- sheet$`Email Address`
length(unique(email))
words_untidy <- sheet[7]
names(words_untidy) <- "text"
words_tidy <- words_untidy %>%
unnest_tokens(word, text) %>%
anti_join(get_stopwords())
wc2 <- words_tidy %>%
count(word) %>%
arrange(desc(n)) %>%
wordcloud2(fontFamily = "Nobile",
color = pro_colors_scheme2,
backgroundColor = "transparent",
size = 1)
wc2
client_scores %>%
ggplot(aes(x = as.factor(`Client ID`), y= Score)) + geom_point() +
labs(x = "Client ID", title = "Client Risk Score", y = "JRA Score")
client_scores %>%
ggplot(aes(x = as.factor(`Client ID`), y= Score)) + geom_point() +
labs(x = "Client ID", title = "Client Risk Score", y = "JRA Score")
source("mock_etl.R")
source("risk_factors_math.R")
library(kableExtra)
library(ggmosaic)
kable(demographics) %>%
kable_styling(bootstrap_options = c("striped", "bordered", "hover")) %>%
scroll_box(width = "75%", height = "75%")
demo_ZRG <- demographics %>% group_by(`Client Zipcode`, `Client Race`, `Client Gender`) %>%
summarize(Totals = n())
demo_ZRG %>% kable() %>%
kable_styling(bootstrap_options = c("striped", "bordered", "hover")) %>%
scroll_box(width = "75%", height = "75%")
demographics %>% ggplot(aes(x = as.factor(`Client Zipcode`), fill = `Client Race`)) +
geom_histogram(stat = "count", position = "dodge") +
facet_grid(~ `Client Gender`) +
labs(x = "Client Zipcode", y = "Total Per Zipcode", title = "JRA: Clients by Zipcode, Gender, and Race") +
coord_flip()
#theme(axis.text.x = element_text(angle = 90))
client_scores %>%
ggplot(aes(x = as.factor(`Client ID`), y= Score)) + geom_point() +
labs(x = "Client ID", title = "Client Risk Score", y = "JRA Score")
client_scores %>%
select(`Client ID`, `Assessment Date`, `Re-evaluation`, Score) %>%
left_join(demographics %>%
select(`Client ID`, `Client Race`, `Client Gender`, `Client Zipcode`)) %>%
kable() %>%
kable_styling(c("striped", "bordered", "hover", "responsive"))
demo_score <- client_scores %>%
select(`Client ID`, `Assessment Date`, `Re-evaluation`, Score) %>%
left_join(demographics %>%
select(`Client ID`, `Client Race`, `Client Gender`, `Client Zipcode`))
demo_score %>%
ggplot(aes(x = as.factor(`Client Zipcode`), y = Score, col = `Client Race`)) +
scale_x_discrete() +
geom_point() +
labs(x = "Client Zipcode", title = "Zipcode and Risk Score") +
theme(axis.text.x = element_text(angle = 90)) +
facet_grid(~ `Client Gender`)
demo_risk_factor <-demo_score %>%
mutate(`Risk Level` = sapply(Score, gender = `Client Gender`, return_risk))
demo_risk_factor %>%
ggplot(aes(x = as.factor(`Client Zipcode`), y = Score, col = `Risk Level`)) +
scale_x_discrete() +
geom_point()
demo_risk_factor %>%
kable() %>%
kable_styling(c("striped", "bordered", "hover"))
demo_risk_factor %>%
group_by(`Client Race`, Score, `Risk Level`) %>%
summarize(Total = n()) %>%
ggplot(aes(x = `Client Race`, y = Score, col = `Risk Level`)) +
labs(title = "Risk Level by Race and Score") +
geom_point()
demo_risk_factor %>%
group_by(`Client Race`, Score, `Risk Level`) %>%
summarize(Total = n()) %>%
ggplot(aes(x = `Client Race`, y = Score, col = `Risk Level`)) +
labs(title = "Risk Level by Race and Score") +
geom_freqpoly()
demo_risk_factor %>%
group_by(`Client Race`, Score, `Risk Level`) %>%
summarize(Total = n()) %>%
ggplot(aes(x = `Client Race`, y = Score, col = `Risk Level`)) +
labs(title = "Risk Level by Race and Score") +
geom_freqpoly()
demo_risk_factor %>%
group_by(`Client Race`, Score, `Risk Level`) %>%
summarize(Total = n()) %>%
ggplot(aes(x = `Client Race`, y = Score, col = `Risk Level`)) +
labs(title = "Risk Level by Race and Score") +
geom_freqpoly(stat = "identity")
demo_risk_factor %>%
group_by(`Client Race`, Score, `Risk Level`) %>%
summarize(Total = n()) %>%
ggplot(aes(x = `Client Race`, y = Score, col = `Risk Level`)) +
labs(title = "Risk Level by Race and Score") +
geom_hex()
demo_risk_factor %>%
group_by(`Client Race`, Score, `Risk Level`) %>%
summarize(Total = n()) %>%
ggplot(aes(x = `Client Race`, y = Score, col = `Risk Level`)) +
labs(title = "Risk Level by Race and Score") +
geom_line()
demo_risk_factor %>%
group_by(`Client Race`, Score, `Risk Level`) %>%
summarize(Total = n()) %>%
ggplot(aes(x = `Client Race`, y = Score, col = `Risk Level`)) +
labs(title = "Risk Level by Race and Score") +
geom_bar()
demo_risk_factor %>%
group_by(`Client Race`, Score, `Risk Level`) %>%
summarize(Total = n()) %>%
ggplot(aes(x = `Client Race`, y = Score, col = `Risk Level`)) +
labs(title = "Risk Level by Race and Score") +
geom_bar()
demo_risk_factor %>%
group_by(`Client Race`, Score, `Risk Level`) %>%
summarize(Total = n()) %>%
ggplot(aes(x = `Client Race`, y = Score, col = `Risk Level`)) +
labs(title = "Risk Level by Race and Score") +
geom_bar(stat = "identity")
demo_risk_factor %>%
group_by(`Client Race`, Score, `Risk Level`) %>%
summarize(Total = n()) %>%
ggplot(aes(x = `Client Race`, y = Score, fill = `Risk Level`)) +
labs(title = "Risk Level by Race and Score") +
geom_bar(stat = "identity")
demo_risk_factor %>%
group_by(`Client Race`, Score, `Risk Level`) %>%
summarize(Total = n()) %>%
ggplot(aes(x = `Client Race`, y = Score, fill = `Risk Level`)) +
labs(title = "Risk Level by Race and Score") +
geom_bar(stat = "identity") +
facet_grid( ~ SEX)
demo_risk_factor %>%
group_by(`Client Race`, Score, `Risk Level`) %>%
summarize(Total = n()) %>%
ggplot(aes(x = `Client Race`, y = Score, fill = `Risk Level`)) +
labs(title = "Risk Level by Race and Score") +
geom_bar(stat = "identity") +
facet_grid( ~ Gender)
View(client_scores)
install.packages(c("callr", "digest", "later", "leaflet", "R.utils", "rlang", "tinytex", "wordcloud", "xtable"))
install.packages(c("callr", "digest", "later", "leaflet", "R.utils", "rlang", "tinytex", "wordcloud", "xtable"))
install.packages("r2d3")
url <- "https://docs.google.com/spreadsheets/d/1bN3ZZ1hVDD_VDCEtYmMYnIocaWkHn1gOsKs5r5Dt44A/edit#gid=1528966377"
source('~/Dropbox (Personal)/Coding Projects/R/data_literacy101/wordcloud.R')
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
unlink('slides_on_data_cache', recursive = TRUE)
xaringan:::inf_mr()
install.packages(c("cli", "data.table", "digest", "ggmosaic", "htmlwidgets", "later", "R6", "Rcpp", "reprex", "rstudioapi", "simstudy"))
xaringan:::inf_mr()
xaringan:::inf_mr()
font_add_google(name = "Nobile")
source('~/Dropbox (Personal)/Coding Projects/R/data_literacy101/wordcloud.R', echo=TRUE)
responses <- gs_url("https://docs.google.com/spreadsheets/d/1oqOAeku8K8JGb31U8HGHu6PsAaxGWdtFxZFLUKtDlpE/edit#gid=1115118292")
responses <- gs_url("https://docs.google.com/spreadsheets/d/1oqOAeku8K8JGb31U8HGHu6PsAaxGWdtFxZFLUKtDlpE/edit#gid=1115118292")
responses <- gs_url("https://docs.google.com/spreadsheets/d/1oqOAeku8K8JGb31U8HGHu6PsAaxGWdtFxZFLUKtDlpE/edit#gid=1115118292")
gs_auth()
responses <- gs_url("https://docs.google.com/spreadsheets/d/1oqOAeku8K8JGb31U8HGHu6PsAaxGWdtFxZFLUKtDlpE/edit#gid=1115118292")
gs_auth()
responses <- gs_url("https://docs.google.com/spreadsheets/d/1bN3ZZ1hVDD_VDCEtYmMYnIocaWkHn1gOsKs5r5Dt44A/edit#gid=1528966377")
gs_ls()
gs_deauth()
gs_auth()
1bN3ZZ1hVDD_VDCEtYmMYnIocaWkHn1gOsKs5r5Dt44A
responses <- gs_url("https://docs.google.com/spreadsheets/d/1bN3ZZ1hVDD_VDCEtYmMYnIocaWkHn1gOsKs5r5Dt44A/edit#gid=1528966377")
source('~/Dropbox (Personal)/Coding Projects/R/data_literacy101/wordcloud.R')
library(tidyverse)
library(lubridate)
library(kableExtra)
library(viridis)
library(plotly)
library(xaringan)
library("sysfonts")
library("showtext")
source("normal_height.R")
# figure out how to make sure it works on windows or mac
# need to fix formating data  ssh-add ~/.ssh/id_rsa
# need to fix gitv
source("wordcloud.R")
source("wordcloud.R")
library(tidyverse)
library(lubridate)
library(kableExtra)
library(viridis)
library(plotly)
library(xaringan)
library("sysfonts")
library("showtext")
source("normal_height.R")
# figure out how to make sure it works on windows or mac
# need to fix formating data  ssh-add ~/.ssh/id_rsa
# need to fix gitv
source("wordcloud.R")
source('~/Dropbox (Personal)/Coding Projects/R/data_literacy101/wordcloud.R')
source('~/Dropbox (Personal)/Coding Projects/R/data_literacy101/wordcloud.R')
library(tidyverse)
library(lubridate)
library(kableExtra)
library(viridis)
library(plotly)
library(xaringan)
library("sysfonts")
library("showtext")
source("normal_height.R")
# figure out how to make sure it works on windows or mac
# need to fix formating data  ssh-add ~/.ssh/id_rsa
# need to fix gitv
source("wordcloud.R")
words_tidy %>%
count(word) %>%
with(wordcloud(word, n, min.freq = 1,
max.words = 25, colors = pro_colors_scheme,
family = "Nobile",
scale = c(4, 1)),
fill = "transparent")
par(mar = rep(0, 4))
#out.extra='style="display:block;"'
total_height_sex_histogram +
theme(panel.spacing = unit(5, "lines"))+
facet_grid(~ Sex)+
theme(axis.text = element_text(family = "Nobile", size = 20 ),
axis.title = element_text(family = "Nobile", size = 20 ),
legend.text = element_text(family = "Nobile", size = 20),
legend.title = element_text(family = "Nobile", size = 20))
total_height_chart %>% kable(caption = "All Measurements in Inches") %>%
kable_styling("striped", "bordered", full_width = FALSE)
length(unique(email))
words_untidy <- gsheet[7]
source('~/Dropbox (Personal)/Coding Projects/R/data_literacy101/wordcloud.R', echo=TRUE)
library(tidyverse)
library(lubridate)
library(kableExtra)
library(viridis)
library(plotly)
library(xaringan)
library("sysfonts")
library("showtext")
source("normal_height.R")
# figure out how to make sure it works on windows or mac
# need to fix formating data  ssh-add ~/.ssh/id_rsa
# need to fix gitv
source("wordcloud.R")
words_tidy %>%
count(word) %>%
with(wordcloud(word, n, min.freq = 1,
max.words = 25, colors = pro_colors_scheme,
family = "Nobile",
scale = c(4, 1)),
fill = "transparent")
par(mar = rep(0, 4))
#out.extra='style="display:block;"'
total_height_sex_histogram +
theme(panel.spacing = unit(5, "lines"))+
facet_grid(~ Sex)+
theme(axis.text = element_text(family = "Nobile", size = 20 ),
axis.title = element_text(family = "Nobile", size = 20 ),
legend.text = element_text(family = "Nobile", size = 20),
legend.title = element_text(family = "Nobile", size = 20))
total_height_chart %>% kable(caption = "All Measurements in Inches") %>%
kable_styling("striped", "bordered", full_width = FALSE)
height
height[1] <- height[1] * 2.54
height[1]
height <- height_cm %>% select(height, Sex = sex)
View(height)
library("tidyverse")
#all heights in inches
cite <- "https://vincentarelbundock.github.io/Rdatasets/doc/carData/Davis.html"
#height <- read_csv("/Users/martin.gleason/Dropbox (Personal)/Coding Projects/DataSets/height_weight.csv") #windows version
file_location <- "/Users/marty/Dropbox (Personal)/Coding Projects/DataSets/height_weight.csv"
height_cm <- read_csv(file_location)
height <- height_cm %>% select(height, Sex = sex)
height[1] <- height[1] * 0.393701
height_quants <- height %>% summarise(q5 = quantile(height, .05),
q95 = quantile(height, .95),
avg = mean(height),
median = median(height))
x.dens <- density(height$height)
df_height_den <- data.frame(x = x.dens$x, y = x.dens$y)
bad_height <- height %>% summarize("Average Height" = mean(height),
"Median Height" = median(height),
"Shortest" = min(height),
"Tallest" = max(height),
"Standard Deviation, in Inches" = sd(height))
total_height <- height %>%
ggplot(aes(x = height)) +
geom_density(fill = "#a5d3c1") +
labs(x = "Height in Inches", y = "Probability Distribution")+
theme(axis.text = element_text(family = "Nobile", size = 18 ),
axis.title = element_text(family = "Nobile", size = 17 ))
bad_proof <- total_height +
geom_area(data = subset(df_height_den, x >= height_quants$q5 & x <= height_quants$q95),
aes(x = x, y = y), fill = "#9b9292") +
geom_vline(aes(xintercept = height_quants$median, color = "Median"), size = 1.5) +
geom_vline(aes(xintercept = mean(height), color = "Mean"), size = 1.5) +
scale_color_manual(name = "Descriptive Statistics", values = c(Median = "red", Mean = "#eebf48")) +
theme(axis.text = element_text(family = "Nobile", size = 18 ),
axis.title = element_text(family = "Nobile", size = 17 ))
total_height_bar <- height %>% group_by(Sex) %>%
ggplot(aes(x = height)) + geom_bar(stat = "count", fill = "#a5d3c1", col = "black") +
labs(x = "Height in Inches", y = "Total at that Height")+
theme(axis.text = element_text(family = "Nobile", size = 18 ),
axis.title = element_text(family = "Nobile", size = 17 ))
total_height_chart <- height %>% group_by(Sex) %>%
summarize("Average Height" = mean(height),
"Median Height" = median(height),
"Shortest" = min(height),
"Tallest" = max(height),
"Count" = n(),
"Standard Deviation" = sd(height))
total_height_sex_histogram <- height %>%
group_by(Sex) %>%
ggplot(aes(x = height, fill = Sex)) + geom_histogram( aes(y = ..density..), col = "black", position = "dodge")+
labs(x = "Height in Inches", y = "Total at that Height", caption = paste("Data from: " , cite), fill = "Sex")+
theme(axis.text = element_text(family = "Nobile", size = 18 ),
axis.title = element_text(family = "Nobile", size = 17 ))
height_men <- height %>% filter(Sex == "M")
height_women <- height %>% filter(Sex == "F")
height_men_hist <- height_men %>%
ggplot(aes(x = height)) + geom_histogram(aes(y = ..density..), fill = "blue", col = "black") +
labs(x = "Height in Inches", y = "Total at that Height", caption = paste("Data from: " , cite))+
theme(axis.text = element_text(family = "Nobile", size = 18 ),
axis.title = element_text(family = "Nobile", size = 17 ))
height_men_hist + stat_function(fun = dnorm,
args = list(mean = mean(height_men$height), sd(height_men$height)),
col = "blue",
lwd = 1)
height_women_hist <- height_women %>%
ggplot(aes(x = height, fill = Sex)) + geom_histogram(aes(y = ..density..), fill = "#990000", col = "black") +
labs(x = "Height in Inches", y = "Total at that Height", caption = paste("Data from: " , cite))+
theme(axis.text = element_text(family = "Nobile", size = 18 ),
axis.title = element_text(family = "Nobile", size = 17 ))
height_women_hist + stat_function(fun = dnorm,
args = list(mean = mean(height_women$height), sd(height_women$height)),
col = "black",
lwd = 1) +
labs(y = "Probability Distribution")
prob_57 <- pnorm(57, mean = mean(height_women$height), sd = sd(height_women$height))
prob_164 <- pnorm(164, mean = mean(height_women$height), sd = sd(height_women$height))
total_height_bar
xaringan:::inf_mr()
xaringan:::inf_mr()
unlink('slides_on_data_cache', recursive = TRUE)
\
xaringan:::inf_mr()
xaringan:::inf_mr()
library(tidyverse)
library(tidyverse)
library(lubridate)
library(kableExtra)
library(viridis)
library(plotly)
library(xaringan)
library("sysfonts")
library("showtext")
source("normal_height.R")
file_location <- "/Users/marty/Dropbox (Personal)/Coding Projects/DataSets/height_weight.csv"
height_cm <- read_csv(file_location)
height <- height_cm %>% select(height, Sex = sex)
xaringan:::inf_mr()
library(blogdown)
blogdown::update_hugo()
new_site()
build_dir("static")
pwd
total_height_chart %>% kable(caption = "All Measurements in Inches") %>%
kable_styling("striped", "bordered", full_width = FALSE)
library(tidyverse)
library(lubridate)
library(kableExtra)
library(viridis)
library(plotly)
library(xaringan)
library(blogdown)
library("sysfonts")
library("showtext")
source("normal_height.R")
# figure out how to make sure it works on windows or mac
# need to fix formating data  ssh-add ~/.ssh/id_rsa
# need to fix gitv
total_height_sex_histogram +
theme(panel.spacing = unit(5, "lines"))+
facet_grid(~ Sex)+
theme(axis.text = element_text(family = "Nobile", size = 20 ),
axis.title = element_text(family = "Nobile", size = 20 ),
legend.text = element_text(family = "Nobile", size = 20),
legend.title = element_text(family = "Nobile", size = 20))
total_height_chart %>% kable(caption = "All Measurements in Inches") %>%
kable_styling("striped", "bordered", full_width = FALSE)
total_height_chart %>% kable(caption = "All Measurements in Inches") %>%
kable_styling("striped", "bordered", full_width = FALSE)
status

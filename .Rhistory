with(wordcloud(word, n, min.freq = 1,
max.words = 25, colors = pro_colors_scheme,
family = "Nobile",
scale = c(4, 1)),
fill = "transparent")
par(mar = rep(0, 4))
#out.extra='style="display:block;"'
total_height_sex_histogram +
theme(panel.spacing = unit(5, "lines"))+
facet_grid(~ Sex)+
theme(axis.text = element_text(family = "Nobile", size = 20 ),
axis.title = element_text(family = "Nobile", size = 20 ),
legend.text = element_text(family = "Nobile", size = 20),
legend.title = element_text(family = "Nobile", size = 20))
total_height_chart %>% kable(caption = "All Measurements in Inches") %>%
kable_styling("striped", "bordered", full_width = FALSE)
height
height[1] <- height[1] * 2.54
height[1]
height <- height_cm %>% select(height, Sex = sex)
View(height)
library("tidyverse")
#all heights in inches
cite <- "https://vincentarelbundock.github.io/Rdatasets/doc/carData/Davis.html"
#height <- read_csv("/Users/martin.gleason/Dropbox (Personal)/Coding Projects/DataSets/height_weight.csv") #windows version
file_location <- "/Users/marty/Dropbox (Personal)/Coding Projects/DataSets/height_weight.csv"
height_cm <- read_csv(file_location)
height <- height_cm %>% select(height, Sex = sex)
height[1] <- height[1] * 0.393701
height_quants <- height %>% summarise(q5 = quantile(height, .05),
q95 = quantile(height, .95),
avg = mean(height),
median = median(height))
x.dens <- density(height$height)
df_height_den <- data.frame(x = x.dens$x, y = x.dens$y)
bad_height <- height %>% summarize("Average Height" = mean(height),
"Median Height" = median(height),
"Shortest" = min(height),
"Tallest" = max(height),
"Standard Deviation, in Inches" = sd(height))
total_height <- height %>%
ggplot(aes(x = height)) +
geom_density(fill = "#a5d3c1") +
labs(x = "Height in Inches", y = "Probability Distribution")+
theme(axis.text = element_text(family = "Nobile", size = 18 ),
axis.title = element_text(family = "Nobile", size = 17 ))
bad_proof <- total_height +
geom_area(data = subset(df_height_den, x >= height_quants$q5 & x <= height_quants$q95),
aes(x = x, y = y), fill = "#9b9292") +
geom_vline(aes(xintercept = height_quants$median, color = "Median"), size = 1.5) +
geom_vline(aes(xintercept = mean(height), color = "Mean"), size = 1.5) +
scale_color_manual(name = "Descriptive Statistics", values = c(Median = "red", Mean = "#eebf48")) +
theme(axis.text = element_text(family = "Nobile", size = 18 ),
axis.title = element_text(family = "Nobile", size = 17 ))
total_height_bar <- height %>% group_by(Sex) %>%
ggplot(aes(x = height)) + geom_bar(stat = "count", fill = "#a5d3c1", col = "black") +
labs(x = "Height in Inches", y = "Total at that Height")+
theme(axis.text = element_text(family = "Nobile", size = 18 ),
axis.title = element_text(family = "Nobile", size = 17 ))
total_height_chart <- height %>% group_by(Sex) %>%
summarize("Average Height" = mean(height),
"Median Height" = median(height),
"Shortest" = min(height),
"Tallest" = max(height),
"Count" = n(),
"Standard Deviation" = sd(height))
total_height_sex_histogram <- height %>%
group_by(Sex) %>%
ggplot(aes(x = height, fill = Sex)) + geom_histogram( aes(y = ..density..), col = "black", position = "dodge")+
labs(x = "Height in Inches", y = "Total at that Height", caption = paste("Data from: " , cite), fill = "Sex")+
theme(axis.text = element_text(family = "Nobile", size = 18 ),
axis.title = element_text(family = "Nobile", size = 17 ))
height_men <- height %>% filter(Sex == "M")
height_women <- height %>% filter(Sex == "F")
height_men_hist <- height_men %>%
ggplot(aes(x = height)) + geom_histogram(aes(y = ..density..), fill = "blue", col = "black") +
labs(x = "Height in Inches", y = "Total at that Height", caption = paste("Data from: " , cite))+
theme(axis.text = element_text(family = "Nobile", size = 18 ),
axis.title = element_text(family = "Nobile", size = 17 ))
height_men_hist + stat_function(fun = dnorm,
args = list(mean = mean(height_men$height), sd(height_men$height)),
col = "blue",
lwd = 1)
height_women_hist <- height_women %>%
ggplot(aes(x = height, fill = Sex)) + geom_histogram(aes(y = ..density..), fill = "#990000", col = "black") +
labs(x = "Height in Inches", y = "Total at that Height", caption = paste("Data from: " , cite))+
theme(axis.text = element_text(family = "Nobile", size = 18 ),
axis.title = element_text(family = "Nobile", size = 17 ))
height_women_hist + stat_function(fun = dnorm,
args = list(mean = mean(height_women$height), sd(height_women$height)),
col = "black",
lwd = 1) +
labs(y = "Probability Distribution")
prob_57 <- pnorm(57, mean = mean(height_women$height), sd = sd(height_women$height))
prob_164 <- pnorm(164, mean = mean(height_women$height), sd = sd(height_women$height))
total_height_bar
xaringan:::inf_mr()
xaringan:::inf_mr()
unlink('slides_on_data_cache', recursive = TRUE)
\
xaringan:::inf_mr()
xaringan:::inf_mr()
library(tidyverse)
library(tidyverse)
library(lubridate)
library(kableExtra)
library(viridis)
library(plotly)
library(xaringan)
library("sysfonts")
library("showtext")
source("normal_height.R")
file_location <- "/Users/marty/Dropbox (Personal)/Coding Projects/DataSets/height_weight.csv"
height_cm <- read_csv(file_location)
height <- height_cm %>% select(height, Sex = sex)
xaringan:::inf_mr()
library(blogdown)
blogdown::update_hugo()
new_site()
build_dir("static")
pwd
total_height_chart %>% kable(caption = "All Measurements in Inches") %>%
kable_styling("striped", "bordered", full_width = FALSE)
library(tidyverse)
library(lubridate)
library(kableExtra)
library(viridis)
library(plotly)
library(xaringan)
library(blogdown)
library("sysfonts")
library("showtext")
source("normal_height.R")
# figure out how to make sure it works on windows or mac
# need to fix formating data  ssh-add ~/.ssh/id_rsa
# need to fix gitv
total_height_sex_histogram +
theme(panel.spacing = unit(5, "lines"))+
facet_grid(~ Sex)+
theme(axis.text = element_text(family = "Nobile", size = 20 ),
axis.title = element_text(family = "Nobile", size = 20 ),
legend.text = element_text(family = "Nobile", size = 20),
legend.title = element_text(family = "Nobile", size = 20))
total_height_chart %>% kable(caption = "All Measurements in Inches") %>%
kable_styling("striped", "bordered", full_width = FALSE)
total_height_chart %>% kable(caption = "All Measurements in Inches") %>%
kable_styling("striped", "bordered", full_width = FALSE)
status
xaringan:::inf_mr()
height[1] <- height[1] * 0.393701
height_quants <- height %>% summarise(q5 = quantile(height, .05),
q95 = quantile(height, .95),
avg = mean(height),
median = median(height))
x.dens <- density(height$height)
df_height_den <- data.frame(x = x.dens$x, y = x.dens$y)
bad_height <- height %>% summarize("Average Height" = mean(height),
"Median Height" = median(height),
"Shortest" = min(height),
"Tallest" = max(height),
"Standard Deviation, in Inches" = sd(height))
library("tidyverse")
#all heights in inches
cite <- "https://vincentarelbundock.github.io/Rdatasets/doc/carData/Davis.html"
file_location <- "/Users/marty/Dropbox (Personal)/Coding Projects/DataSets/height_weight.csv"
height_cm <- read_csv(file_location)
file_location <- file.path("/Users/marty/Dropbox (Personal)/Coding Projects/DataSets/height_weight.csv")
height_cm <- read_csv(file_location)
file_location <- file.path("/Users/marty/Dropbox (Personal)/Coding Projects/DataSets/height_weight.csv")
height_cm <- read_csv(file_location)
file_location
file_location <- system.file("/Users/marty/Dropbox (Personal)/Coding Projects/DataSets/height_weight.csv")
height_cm <- read_csv(file_location)
file_location <- system.file("/Users/marty/Dropbox (Personal)/Coding Projects/DataSets/height_weight.csv")
height_cm <- read_csv(file_location)
file_location <- system.file("/Users/marty/Dropbox (Personal)/Coding Projects/DataSets/height_weight.csv")
file_location
file_location <- system.file("/Users/marty/Dropbox (Personal)/Coding Projects/DataSets/height_weight.csv")
file_location <- file.path("/Users/marty/Dropbox (Personal)/Coding Projects/DataSets/height_weight.csv")
height_cm <- read_csv(file_location)
?file.path
file_location <- file.path("height_weight.csv")
file_location
height_cm <- read_csv(file_location)
xaringan:::inf_mr()
xaringan:::inf_mr()
source("wordcloud.R")
wc2 <- words_tidy %>%
count(word) %>%
arrange(desc(n)) %>%
wordcloud2(fontFamily = "Nobile",
color = pro_colors_scheme2,
backgroundColor = "transparent",
size = 1)
## Court data/statistics wordcloud
library("tidyverse")
library("googlesheets")
library("wordcloud")
library("wordcloud2")
library("RColorBrewer")
library("sysfonts")
library("tidytext")
library("showtext")
font_add_google(name = "Nobile")
source("../scripts/color_scheme.R")
gs_auth()
responses <- gs_url("https://docs.google.com/spreadsheets/d/1bN3ZZ1hVDD_VDCEtYmMYnIocaWkHn1gOsKs5r5Dt44A/edit#gid=1528966377")
https://docs.google.com/spreadsheets/d/1bN3ZZ1hVDD_VDCEtYmMYnIocaWkHn1gOsKs5r5Dt44A/edit#gid=1528966377
responses <- gs_url("https://docs.google.com/spreadsheets/d/1bN3ZZ1hVDD_VDCEtYmMYnIocaWkHn1gOsKs5r5Dt44A/edit#gid=1528966377")
xaringan:::inf_mr()
xaringan:::inf_mr()
file_location <- file.path("height_weight.csv")
height_cm <- read_csv(file_location)
file_location <- file.path("height_weight.csv")
height_cm <- read_csv(file_location)
xaringan:::inf_mr()
xaringan:::inf_mr()
library(tidyverse)
library(lubridate)
library(kableExtra)
library(viridis)
library(plotly)
library(xaringan)
library("sysfonts")
library("showtext")
source("normal_height.R")
# figure out how to make sure it works on windows or mac
# need to fix formating data  ssh-add ~/.ssh/id_rsa
# need to fix gitv
source("wordcloud.R")
words_tidy %>%
count(word) %>%
with(wordcloud(word, n, min.freq = 1,
max.words = 25, colors = pro_colors_scheme,
family = "Nobile",
scale = c(4, 1)),
fill = "transparent")
par(mar = rep(0, 4))
#out.extra='style="display:block;"'
total_height_sex_histogram +
theme(panel.spacing = unit(5, "lines"))+
facet_grid(~ Sex)+
theme(axis.text = element_text(family = "Nobile", size = 20 ),
axis.title = element_text(family = "Nobile", size = 20 ),
legend.text = element_text(family = "Nobile", size = 20),
legend.title = element_text(family = "Nobile", size = 20))
total_height_chart %>% kable(caption = "All Measurements in Inches") %>%
kable_styling("striped", "bordered", full_width = FALSE)
library(tidyverse)
library(lubridate)
library(kableExtra)
library(viridis)
library(plotly)
library(xaringan)
library("sysfonts")
library("showtext")
source("normal_height.R")
# figure out how to make sure it works on windows or mac
# need to fix formating data  ssh-add ~/.ssh/id_rsa
# need to fix gitv
source("wordcloud.R")
words_tidy %>%
count(word) %>%
with(wordcloud(word, n, min.freq = 1,
max.words = 25, colors = pro_colors_scheme,
family = "Nobile",
scale = c(4, 1)),
fill = "transparent")
par(mar = rep(0, 4))
#out.extra='style="display:block;"'
total_height_sex_histogram +
theme(panel.spacing = unit(5, "lines"))+
facet_grid(~ Sex)+
theme(axis.text = element_text(family = "Nobile", size = 20 ),
axis.title = element_text(family = "Nobile", size = 20 ),
legend.text = element_text(family = "Nobile", size = 20),
legend.title = element_text(family = "Nobile", size = 20))
total_height_chart %>% kable(caption = "All Measurements in Inches") %>%
kable_styling("striped", "bordered", full_width = FALSE)
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
#random norm
library(tidyverse)
x <- rnorm(10000, mean = 5000, sd = 250)
x
x %>% ggplot(aes(x = x)) + geom_histogram()
x <- as.data.frame(x)
x %>% ggplot(aes(x = x)) + geom_histogram()
x %>% ggplot(aes(x = x)) +
geom_histogram() +
geom_line(mean(x))
x %>% ggplot(aes(x = x)) +
geom_histogram() +
geom_line(aes(x = mean(x)))
x %>% ggplot(aes(x = x)) +
geom_histogram() +
geom_line(aes (y = mean(x)))
x %>% ggplot(aes(x = x), col = "black") +
geom_histogram(fill = "light blue")
x %>% ggplot(aes(x = x)) +
geom_histogram(fill = "light blue")
x %>% ggplot(aes(x = x)) +
geom_histogram(fill = "light blue") +
geom_vline(aes(xintecept = mean))
x %>% ggplot(aes(x = x)) +
geom_histogram(fill = "light blue") +
geom_vline(aes(xintecept = mean(x)))
x %>% ggplot(aes(x = x)) +
geom_histogram(fill = "light blue") +
geom_vline(data = x,
aes(xintecept = mean(x)))
x %>% ggplot(aes(x = x)) +
geom_histogram(fill = "light blue") +
geom_vline(data = x,
aes(xintecept = mean))
x %>% ggplot(aes(x = x)) +
geom_histogram(fill = "light blue") +
geom_vline(data = x,
aes(xintercept = mean))
x %>% ggplot(aes(x = x)) +
geom_histogram(fill = "light blue") +
geom_vline(data = x,
aes(xintercept = mean), col = "red")
x %>% ggplot(aes(x = x)) +
geom_histogram(fill = "light blue") +
geom_vline(data = x,
aes(xintercept = mean), col = "red")z
x %>% ggplot(aes(x = x)) +
geom_histogram(fill = "light blue") +
geom_vline(data = x,
aes(xintercept = mean), col = "red")
y <- rnorm(10000, mean = 5000, sd = 250)
x <- as.data.frame(x, y)
df <- as.data.frame(cbind(x, y))
df %>% ggplot(aes(x = x)) +
geom_histogram(fill = "light blue") +
geom_vline(data = df,
aes(xintercept = mean), col = "red")
df %>% ggplot(aes(x = x)) +
geom_histogram(fill = "light blue")
?vline
??geom_vline
df %>% ggplot(aes(x = x)) +
geom_histogram(fill = "light blue") +
geom_vline(xintercept = mean, col = "red")
df %>% ggplot(aes(x = x)) +
geom_histogram(fill = "light blue") +
geom_vline(xintercept = mean(x), col = "red")
class(df$x)
df %>% ggplot(aes(x = x)) +
geom_histogram(fill = "light blue") +
geom_vline(xintercept = mean(x), fill = "red")
df %>% ggplot(aes(x = x)) +
geom_histogram(fill = "light blue") +
geom_vline(xintercept = mean(x))
mea(df$x)
mean(df$x)
df %>% ggplot(aes(x = x)) +
geom_histogram(fill = "light blue") +
geom_smooth()
df %>% ggplot(aes(x = x)) +
geom_histogram(fill = "light blue") +
geom_smooth(method = "lm")
df %>% ggplot(aes(x = x)) +
geom_histogram(fill = "light blue") +
geom_smooth(method = "lm", stat = "identity")
df %>% ggplot(aes(x = x)) +
geom_smooth(method = "lm", stat = "identity")
?geom_smooth
df %>% ggplot(aes(x = x)) +
geom_smooth()
df %>% ggplot(aes(x = x)) +
geom_density()
df %>% ggplot(aes(x = x)) +
geom_density(fill = "light blue")
df %>% ggplot(aes(x = x)) +
geom_density(fill = "light blue") +
geom_vline(xintercept = mean(x))
df %>% ggplot(aes(x = x)) +
geom_density(fill = "light blue") +
geom_vline(aes(intercept = mean(x)))
df %>% ggplot(aes(x = x)) +
geom_density(fill = "light blue") +
geom_vline(aes(xintercept = mean(x)))
df %>% ggplot(aes(x = x)) +
geom_density(fill = "light blue") +
geom_vline(aes(xintercept = mean(x)), col = "purple")
df %>% ggplot(aes(x = x)) +
geom_density(fill = "light blue") +
geom_vline(aes(xintercept = mean(x),
linetype = 2), col = "purple")
df %>% ggplot(aes(x = x)) +
geom_density(fill = "light blue") +
geom_vline(aes(xintercept = mean(x),
linetype = LType), col = "purple")
df %>% ggplot(aes(x = x)) +
geom_density(fill = "light blue") +
geom_vline(aes(xintercept = mean(x),
linetype = LType), col = "purple") +
scale_linetype_manual()
df %>% ggplot(aes(x = x)) +
geom_density(fill = "light blue") +
geom_vline(aes(xintercept = mean(x),
linetype = LType), col = "purple") +
scale_linetype_manual(value = 5)
df %>% ggplot(aes(x = x)) +
geom_density(fill = "light blue") +
geom_vline(aes(xintercept = mean(x),
linetype = LType), col = "purple") +
scale_linetype_manual(values = 5)
plot <- df %>% ggplot(aes(x = x)) +
geom_density(fill = "light blue") +
geom_vline(aes(xintercept = mean(x),
linetype = LType), col = "purple")
plot + scale_linetype_manual(values = 5)
df %>% ggplot(aes(x = x)) +
geom_density(fill = "light blue") +
geom_vline(aes(xintercept = mean(x),
linetype = "dashed"), col = "purple")
df %>% ggplot(aes(x = x)) +
geom_density(fill = "light blue") +
geom_vline(aes(xintercept = mean(x),
linetype = "dashed"), col = "purple") +
geom_text(data = df,
aes(x = mean(x), label = "mean"))
df %>% ggplot(aes(x = x)) +
geom_density(fill = "light blue") +
geom_vline(aes(xintercept = mean(x),
linetype = "dashed"), col = "purple") +
geom_text(data = df,
aes(x = mean(x), y = .1, label = "mean"))
df %>% ggplot(aes(x = x)) +
geom_density(fill = "light blue") +
geom_vline(aes(xintercept = mean(x),
linetype = "dashed"), col = "purple") +
geom_text(data = df,
aes(x = mean(x), y = .05, label = "mean"))
df %>% ggplot(aes(x = x)) +
geom_density(fill = "light blue") +
geom_vline(aes(xintercept = mean(x),
linetype = "dashed"), col = "purple")
geom_vline(aes(xintercept = median(x), col = "yellow")
df %>% ggplot(aes(x = x)) +
geom_density(fill = "light blue") +
geom_vline(aes(xintercept = mean(x),
linetype = "dashed"), col = "purple") +
geom_vline(aes(xintercept = median(x), col = "yellow"))
df %>% ggplot(aes(x = x)) +
geom_density(fill = "light blue") +
geom_vline(aes(xintercept = mean(x),
linetype = "dashed"), col = "purple") +
geom_vline(aes(xintercept = median(x), col = "yellow"))
df %>% ggplot(aes(x = x)) +
geom_density(fill = "light blue") +
geom_vline(aes(xintercept = mean(x),
linetype = "dashed"), col = "purple") +
geom_vline(aes(xintercept = median(x), col = "yellow", position = "jitter"))
geom_vline(aes(xintercept = mean(x))
df %>% ggplot(aes(x = x)) +
geom_density(fill = "light blue") +
geom_vline(aes(xintercept = mean(x))
?/
df %>% ggplot(aes(x = x)) +
geom_density(fill = "light blue") +
geom_vline(aes(xintercept = mean(x))
df %>% ggplot(aes(x = x)) +
geom_density(fill = "light blue") +
geom_vline(aes(xintercept = mean(x)))
df %>% ggplot(aes(x = x)) +
geom_density(fill = "light blue") +
geom_vline(aes(xintercept = mean(x)))
df %>% ggplot(aes(x = x)) +
geom_density(fill = "light blue") +
geom_vline(aes(xintercept = mean(x), col = "purple"))
df %>% ggplot(aes(x = x)) +
geom_density(fill = "light blue") +
geom_vline(aes(xintercept = mean(x)), col = "purple")
?labs
df %>% ggplot(aes(x = x)) +
geom_density(fill = "light blue") +
geom_vline(aes(xintercept = mean(x)), col = "purple") +
labs(title "Totally Random Numbers in Normal Distribution")
geom_density(fill = "light blue") +
geom_vline(aes(xintercept = mean(x)), col = "purple") +
labs(title = "Totally Random Numbers in Normal Distribution")
df %>% ggplot(aes(x = x)) +
geom_density(fill = "light blue") +
geom_vline(aes(xintercept = mean(x)), col = "purple") +
labs(title = "Totally Random Numbers in Normal Distribution")
df %>% ggplot(aes(x = x)) +
geom_density(fill = "light blue") +
geom_vline(aes(xintercept = mean(x)), col = "purple") +
labs(title = "Totally Random Numbers in Normal Distribution",
vline = "Mean, Median, Mode")
df %>% ggplot(aes(x = x)) +
geom_density(fill = "light blue") +
geom_vline(aes(xintercept = mean(x)), col = "purple") +
labs(title = "Totally Random Numbers in Normal Distribution",
subtitle = "The purple line is the Mean, Median and Mode")
xaringan:::inf_mr()
xaringan:::inf_mr()
source("scripts/rnorm_plot.R")
xaringan:::inf_mr()
source("scripts/rnorm_plot.R")
df_plot
git add .
knit_with_parameters('~/Dropbox (Personal)/Coding Projects/R/data_literacy101/index.Rmd')
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
unlink('slides_on_data_cache', recursive = TRUE)
